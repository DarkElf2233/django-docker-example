services:
  django_app:
    build:
      context: myproject
      target: builder
    container_name: django_app
    command: > 
      sh -c "python manage.py makemigrations
      && python manage.py migrate
      && python manage.py collectstatic --no-input
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 8000:8000
    depends_on:
      pg_db:
        condition: service_healthy
        restart: true
    env_file:
      - ./.env.dev
    develop:
      watch:
        - action: sync
          path: ./myproject
          target: /usr/app/myproject
          ignore:
            - __pycache__/
        - action: rebuild
          path: /usr/app/myproject/requirements.txt

  pg_db:
    image: postgres:latest
    container_name: pg_db
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  static_volume:
